blueprint:
  name: ZHA Remote - Universal Control (with separate active-lights filters)
  description: >
    A universal blueprint for a ZHA remote (e.g., Ikea STYRBAR E2001/E2002) that supports:
    - Single/double/triple click actions on top, bottom, left, and right buttons.
    - Hold actions for brightness control (top/bottom) and custom hold actions for left/right buttons.
    
    Additionally, you can independently configure whether hold actions for brightness (top/bottom),
    left, and right buttons should only apply to lights that are currently turned on.

    This blueprint is based on logic extracted from previous separate automations you provided. 
    Instead of having four separate automations, you can now configure all the actions from a single 
    blueprint, assigning what happens on each click or hold action. The conditions for single/double/triple 
    click and hold are derived from your original approach and adapted to a reusable blueprint.

  domain: automation
  input:
    remote:
      name: ZHA Remote
      description: Select your ZHA remote device.
      selector:
        device:
          integration: zha

    wait_time:
      name: Delay for multi-click detection (seconds)
      description: The time window to detect double/triple clicks.
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 2
          step: 0.1
          unit_of_measurement: s

    only_active_lights_brightness:
      name: Only active lights for brightness hold (top/bottom)
      description: If enabled, hold actions for brightness up/down only apply to lights that are turned on.
      default: false
      selector:
        boolean: {}

    only_active_lights_left:
      name: Only active lights for left button hold
      description: If enabled, hold actions for the left button only apply to lights that are turned on.
      default: false
      selector:
        boolean: {}

    only_active_lights_right:
      name: Only active lights for right button hold
      description: If enabled, hold actions for the right button only apply to lights that are turned on.
      default: false
      selector:
        boolean: {}

    # Actions for top button (click)
    single_click_action_top:
      name: Top button - single click
      default: []
      selector:
        action: {}
    double_click_action_top:
      name: Top button - double click
      default: []
      selector:
        action: {}
    triple_click_action_top:
      name: Top button - triple click
      default: []
      selector:
        action: {}

    # Actions for bottom button (click)
    single_click_action_bottom:
      name: Bottom button - single click
      default: []
      selector:
        action: {}
    double_click_action_bottom:
      name: Bottom button - double click
      default: []
      selector:
        action: {}
    triple_click_action_bottom:
      name: Bottom button - triple click
      default: []
      selector:
        action: {}

    # Actions for left button (click)
    single_click_action_left:
      name: Left button - single click
      default: []
      selector:
        action: {}
    double_click_action_left:
      name: Left button - double click
      default: []
      selector:
        action: {}
    triple_click_action_left:
      name: Left button - triple click
      default: []
      selector:
        action: {}

    # Actions for right button (click)
    single_click_action_right:
      name: Right button - single click
      default: []
      selector:
        action: {}
    double_click_action_right:
      name: Right button - double click
      default: []
      selector:
        action: {}
    triple_click_action_right:
      name: Right button - triple click
      default: []
      selector:
        action: {}

    # Hold actions
    hold_increase_top:
      name: Hold top button (increase brightness)
      default: []
      selector:
        action: {}

    hold_decrease_bottom:
      name: Hold bottom button (decrease brightness)
      default: []
      selector:
        action: {}

    hold_left:
      name: Hold left button
      default: []
      selector:
        action: {}

    hold_right:
      name: Hold right button
      default: []
      selector:
        action: {}

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

variables:
  command: "{{ trigger.event.data.command }}"
  cluster_id: "{{ trigger.event.data.cluster_id }}"
  endpoint_id: "{{ trigger.event.data.endpoint_id }}"
  wt: !input wait_time
  only_bright: !input only_active_lights_brightness
  only_left: !input only_active_lights_left
  only_right: !input only_active_lights_right

  # Determine which button was pressed
  # This logic maps commands and endpoints similar to how your original automations did.
  button_name: >
    {% if cluster_id == 6 %}
      {% if endpoint_id == 1 and command == 'on' %}top{% elif endpoint_id == 1 and command == 'off' %}bottom
      {% elif endpoint_id == 2 and command == 'on' %}left{% elif endpoint_id == 3 and command == 'on' %}right
      {% else %}unknown{% endif %}
    {% elif cluster_id == 8 %}
      {% if endpoint_id == 1 and (command == 'move_with_on_off') %}hold_increase_top
      {% elif endpoint_id == 1 and command == 'move' %}hold_decrease_bottom
      {% elif endpoint_id == 2 and (command in ['move','move_with_on_off']) %}hold_left
      {% elif endpoint_id == 3 and (command in ['move','move_with_on_off']) %}hold_right
      {% else %}unknown{% endif %}
    {% else %}
      unknown
    {% endif %}

  is_hold: >
    {{ 'hold' in button_name }}

  is_click: >
    {{ button_name in ['top','bottom','left','right'] }}

action:
  - choose:
      # HOLD ACTIONS - Apply filters for active lights if enabled
      - conditions:
          - condition: template
            value_template: "{{ is_hold }}"
        sequence:
          - choose:
              # Hold Increase Top (Brightness)
              - conditions: "{{ button_name == 'hold_increase_top' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ only_bright }}"
                        sequence: !input hold_increase_top
                      - conditions: []
                        sequence: !input hold_increase_top

              # Hold Decrease Bottom (Brightness)
              - conditions: "{{ button_name == 'hold_decrease_bottom' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ only_bright }}"
                        sequence: !input hold_decrease_bottom
                      - conditions: []
                        sequence: !input hold_decrease_bottom

              # Hold Left
              - conditions: "{{ button_name == 'hold_left' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ only_left }}"
                        sequence: !input hold_left
                      - conditions: []
                        sequence: !input hold_left

              # Hold Right
              - conditions: "{{ button_name == 'hold_right' }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ only_right }}"
                        sequence: !input hold_right
                      - conditions: []
                        sequence: !input hold_right

      # CLICK ACTIONS - single/double/triple based on wait_time and click_count
      - conditions:
          - condition: template
            value_template: "{{ is_click }}"
        sequence:
          - variables:
              this_button: "{{ button_name }}"
              click_count: 1
          # Wait for second click
          - wait_for_trigger:
              - platform: event
                event_type: zha_event
                event_data:
                  device_id: !input remote
            timeout: "{{ wt }}"
            continue_on_timeout: true
          - variables:
              click_count: >
                {% if wait.trigger %}
                  {{ click_count + 1 }}
                {% else %}
                  {{ click_count }}
                {% endif %}

          # Wait for third click
          - wait_for_trigger:
              - platform: event
                event_type: zha_event
                event_data:
                  device_id: !input remote
            timeout: "{{ wt }}"
            continue_on_timeout: true
          - variables:
              click_count: >
                {% if wait.trigger %}
                  {{ click_count + 1 }}
                {% else %}
                  {{ click_count }}
                {% endif %}

          # Apply actions based on click_count
          - choose:
              # TOP
              - conditions:
                  - condition: template
                    value_template: "{{ this_button == 'top' }}"
                sequence:
                  - choose:
                      - conditions: "{{ click_count == 1 }}"
                        sequence: !input single_click_action_top
                      - conditions: "{{ click_count == 2 }}"
                        sequence: !input double_click_action_top
                      - conditions: "{{ click_count == 3 }}"
                        sequence: !input triple_click_action_top

              # BOTTOM
              - conditions:
                  - condition: template
                    value_template: "{{ this_button == 'bottom' }}"
                sequence:
                  - choose:
                      - conditions: "{{ click_count == 1 }}"
                        sequence: !input single_click_action_bottom
                      - conditions: "{{ click_count == 2 }}"
                        sequence: !input double_click_action_bottom
                      - conditions: "{{ click_count == 3 }}"
                        sequence: !input triple_click_action_bottom

              # LEFT
              - conditions:
                  - condition: template
                    value_template: "{{ this_button == 'left' }}"
                sequence:
                  - choose:
                      - conditions: "{{ click_count == 1 }}"
                        sequence: !input single_click_action_left
                      - conditions: "{{ click_count == 2 }}"
                        sequence: !input double_click_action_left
                      - conditions: "{{ click_count == 3 }}"
                        sequence: !input triple_click_action_left

              # RIGHT
              - conditions:
                  - condition: template
                    value_template: "{{ this_button == 'right' }}"
                sequence:
                  - choose:
                      - conditions: "{{ click_count == 1 }}"
                        sequence: !input single_click_action_right
                      - conditions: "{{ click_count == 2 }}"
                        sequence: !input double_click_action_right
                      - conditions: "{{ click_count == 3 }}"
                        sequence: !input triple_click_action_right
    default: []
mode: restart
